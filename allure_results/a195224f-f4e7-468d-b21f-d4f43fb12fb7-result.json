{"name": "Тест изменения данных пользователя", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == True\n +  where False = ChangeUser(success=False, status_code=403, message='User with such email already exists', user=None).success", "trace": "self = <tests.test_change_user.TestChangeUser object at 0x0000026429672150>\nregister_user = RegisterUser(success=True, status_code=200, message=None, user=User(email='maydon@example.org', name='Karen Farrell'),...WEv4Ltzcc1nL2gn7pE8Y', refreshToken='e9f9baaef5c1314eb69e0f7ff887cfbd41629d15203bcdb9e8c42f129dc452b532d1addbb90350c4')\nnew_data = {'email': 'patricia59@example.net'}, authorized = True\n\n    @pytest.mark.parametrize('new_data, authorized', [\n        ({'email': Generate.email()}, True),\n        ({'name': Generate.name()}, True),\n        ({'password': Generate.password()}, True),\n        ({'email': Generate.email()}, False),\n        ({'name': Generate.name()}, False),\n        ({'password': Generate.password()}, False),\n    ])\n    @allure.title('Тест изменения данных пользователя')\n    def test_change_user_data(self, register_user, new_data, authorized):\n        \"\"\"\n        Тестирование изменения данных пользователя.\n    \n        Параметры:\n            - register_user: фикстура для регистрации пользователя.\n            - new_data: словарь с новыми данными пользователя.\n            - authorized: флаг, указывающий, авторизован ли пользователь.\n    \n        Примечания:\n            - Тест параметризован для проверки изменения различных данных пользователя как авторизованным, так и неавторизованным пользователем.\n            - В случае неавторизованного пользователя, токен устанавливается в None.\n            - Проверяется соответствие успешности изменения данных ожидаемому результату.\n        \"\"\"\n    \n        token = register_user.accessToken if authorized else None\n    \n        response = User.change(token, **new_data)\n    \n>       assert response.success == authorized\nE       AssertionError: assert False == True\nE        +  where False = ChangeUser(success=False, status_code=403, message='User with such email already exists', user=None).success\n\ntests\\test_change_user.py:38: AssertionError"}, "description": "\n        Тестирование изменения данных пользователя.\n\n        Параметры:\n            - register_user: фикстура для регистрации пользователя.\n            - new_data: словарь с новыми данными пользователя.\n            - authorized: флаг, указывающий, авторизован ли пользователь.\n\n        Примечания:\n            - Тест параметризован для проверки изменения различных данных пользователя как авторизованным, так и неавторизованным пользователем.\n            - В случае неавторизованного пользователя, токен устанавливается в None.\n            - Проверяется соответствие успешности изменения данных ожидаемому результату.\n        ", "steps": [{"name": "Изменение данных пользователя", "status": "passed", "parameters": [{"name": "access_token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MGU5MWZmOWVkMjgwMDAxYjNkYTg3NiIsImlhdCI6MTcxMjIzMDkxMSwiZXhwIjoxNzEyMjMyMTExfQ.lsf1IHSaWuX66LRpX-hZAnCWEv4Ltzcc1nL2gn7pE8Y'"}, {"name": "email", "value": "'patricia59@example.net'"}], "start": 1712230912160, "stop": 1712230912273}], "parameters": [{"name": "new_data", "value": "{'email': 'patricia59@example.net'}"}, {"name": "authorized", "value": "True"}], "start": 1712230912160, "stop": 1712230912274, "uuid": "49a4eb17-3525-4103-9e64-9f1763d87166", "historyId": "88e7df5de8dc042308101a96761ace24", "testCaseId": "50874be95b7e9971b694a4241e2f8cbf", "fullName": "tests.test_change_user.TestChangeUser#test_change_user_data", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_change_user"}, {"name": "subSuite", "value": "TestChangeUser"}, {"name": "host", "value": "DESKTOP-PGCK8NJ"}, {"name": "thread", "value": "12660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_change_user"}]}